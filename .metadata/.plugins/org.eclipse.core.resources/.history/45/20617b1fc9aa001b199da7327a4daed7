import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;
import java.util.TreeMap;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;


public class RequestClient {
	Map<String, Set<String>> resultMap;
	String key;
	HttpURLConnection con;
	HttpURLConnection coSpons;


	public RequestClient(String link, String key, String type) {
		this.key = key;

		//Authorization for the HTTP Request
		try {
			con = (HttpURLConnection) new URL(link).openConnection();
			con.setRequestProperty("X-API-Key", key);
			//type of request
			con.setRequestMethod("GET");
			con.setDoOutput(true);
			con.setDoInput(true);
			
			coSpons.setRequestProperty("X-API-Key", key);
			//type of request
			coSpons.setRequestMethod("GET");
			coSpons.setDoOutput(true);
			coSpons.setDoInput(true);
		} catch (IOException e) {
			e.printStackTrace();
		}

	}

	public JSONObject getObject() {
		try {
			BufferedReader in = new BufferedReader(
					new InputStreamReader(con.getInputStream()));
			String inputLine;
			StringBuffer response = new StringBuffer();
			while ((inputLine = in.readLine()) != null) {
				response.append(inputLine);
			}
			in.close();
			return new JSONObject(response.toString());
		} catch (JSONException | IOException e) {
			e.printStackTrace();
		}
		return null;
	}

	public Map<String, Set<String>> createMap(JSONObject r) {
		resultMap = new TreeMap<String, Set<String>>();

		JSONArray resul;
		try {
			resul = new JSONArray(r.get("results").toString());
			JSONArray bills = new JSONArray(resul.getJSONObject(0).get("bills"));

			for(int i = 0; i < bills.length(); i ++) {
				JSONObject bill = bills.getJSONObject(i);
				String[] billID = bill.get("bill_id").toString().split("-");
				resultMap.put(billID[0], getSponsors(billID));
			}
			return resultMap;
		} catch (JSONException e) {
			e.printStackTrace();
		}
		return resultMap;
	}
	
	private Set<String> getSponsors(String[] billID) {
		Set<String> listSpons = new HashSet<String>();
		String newLink = "https://api.propublica.org/congress/v1/" + billID[1] + "/bills/" + billID[0] + "/cosponsors.json";
		
		try {
			coSpons = (HttpURLConnection) new URL(newLink).openConnection();
			
			
		} catch (IOException e) {
			e.printStackTrace();
		}

		return null;
	}
}
